#### main domain for sikderithub ##
server {
    server_name sikderithub.com www.sikderithub.com mail.sikderithub.com 103.50.163.119;
    listen 80;
    listen [::]:80;

    include conf.d/includes-optional/cloudflare.conf;

    set $CPANEL_APACHE_PROXY_IP 103.50.163.119;
    set $CPANEL_APACHE_PROXY_SSL_IP 103.50.163.119;
    set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_PORT;
    set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_IP;
    if ($scheme = https) {
        set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_SSL_PORT;
        set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_SSL_IP;
    }

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
        
    ssl_protocols TLSv1.2 TLSv1.3;
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
    proxy_ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
            
    root /home/sikderithub/public_html;

    location /cpanelwebcall {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2082/cpanelwebcall;
    }

    location /Microsoft-Server-ActiveSync {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2090/Microsoft-Server-ActiveSync;
    }

    location / {

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass $scheme://$CPANEL_APACHE_PROXY_REQ_IP:$CPANEL_APACHE_PROXY_REQ_PORT;
    }

            
    include conf.d/server-includes/*.conf;
    include conf.d/users/sikderithub/*.conf;
    include conf.d/users/sikderithub/sikderithub.com/*.conf;
}

# nginx does not support a subdomain of a wildcard domain
# Example:  whm.*.mydomain.tld would not be allowed

#### SSL Proxies for sikderithub.com ##
server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;

    server_name  cpanel.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2082;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;

    server_name  cpcalendars.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;

    server_name  cpcontacts.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;

    server_name  webdisk.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2077;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;

    server_name  webmail.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2095;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/sikderithub.com/combined;

    server_name  whm.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2086;
    }
}

#### sub domains for sikderithub ##
server {
    server_name lmpclass.sikderithub.com www.lmpclass.sikderithub.com mail.lmpclass.sikderithub.com;
    listen 80;
    listen [::]:80;

    include conf.d/includes-optional/cloudflare.conf;

    set $CPANEL_APACHE_PROXY_IP 103.50.163.119;
    set $CPANEL_APACHE_PROXY_SSL_IP 103.50.163.119;
    set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_PORT;
    set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_IP;
    if ($scheme = https) {
        set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_SSL_PORT;
        set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_SSL_IP;
    }

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
        
    ssl_protocols TLSv1.2 TLSv1.3;
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
    proxy_ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
            
    root /home/sikderithub/public_html/lmpclass;

    location /cpanelwebcall {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2082/cpanelwebcall;
    }

    location /Microsoft-Server-ActiveSync {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2090/Microsoft-Server-ActiveSync;
    }

    location / {

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass $scheme://$CPANEL_APACHE_PROXY_REQ_IP:$CPANEL_APACHE_PROXY_REQ_PORT;
    }

            
    include conf.d/server-includes/*.conf;
    include conf.d/users/sikderithub/*.conf;
    include conf.d/users/sikderithub/lmpclass.sikderithub.com/*.conf;
}

# nginx does not support a subdomain of a wildcard domain
# Example:  whm.*.mydomain.tld would not be allowed

#### SSL Proxies for lmpclass.sikderithub.com ##
server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;

    server_name  cpanel.lmpclass.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpclass;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2082;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;

    server_name  cpcalendars.lmpclass.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpclass;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;

    server_name  cpcontacts.lmpclass.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpclass;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;

    server_name  webdisk.lmpclass.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpclass;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2077;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;

    server_name  webmail.lmpclass.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpclass;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2095;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpclass.sikderithub.com/combined;

    server_name  whm.lmpclass.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpclass;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpclass;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2086;
    }
}
server {
    server_name lmpvideo.sikderithub.com www.lmpvideo.sikderithub.com mail.lmpvideo.sikderithub.com;
    listen 80;
    listen [::]:80;

    include conf.d/includes-optional/cloudflare.conf;

    set $CPANEL_APACHE_PROXY_IP 103.50.163.119;
    set $CPANEL_APACHE_PROXY_SSL_IP 103.50.163.119;
    set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_PORT;
    set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_IP;
    if ($scheme = https) {
        set $CPANEL_APACHE_PROXY_REQ_PORT $CPANEL_APACHE_PROXY_SSL_PORT;
        set $CPANEL_APACHE_PROXY_REQ_IP $CPANEL_APACHE_PROXY_SSL_IP;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
	
	client_max_body_size 1024M;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
        
    ssl_protocols TLSv1.2 TLSv1.3;
    proxy_ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
    proxy_ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
            
    root /home/sikderithub/public_html/lmpvideo;

    location /cpanelwebcall {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2082/cpanelwebcall;
    }

    location /Microsoft-Server-ActiveSync {
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2090/Microsoft-Server-ActiveSync;
    }

    location / {

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass $scheme://$CPANEL_APACHE_PROXY_REQ_IP:$CPANEL_APACHE_PROXY_REQ_PORT;
    }

            
    include conf.d/server-includes/*.conf;
    include conf.d/users/sikderithub/*.conf;
    include conf.d/users/sikderithub/lmpvideo.sikderithub.com/*.conf;
}

# nginx does not support a subdomain of a wildcard domain
# Example:  whm.*.mydomain.tld would not be allowed

#### SSL Proxies for lmpvideo.sikderithub.com ##
server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;

    server_name  cpanel.lmpvideo.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2082;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;

    server_name  cpcalendars.lmpvideo.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;

    server_name  cpcontacts.lmpvideo.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2079;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;

    server_name  webdisk.lmpvideo.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass http://127.0.0.1:2077;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;

    server_name  webmail.lmpvideo.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2095;
    }
}

server {
    listen 80;
    listen [::]:80;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;
    ssl_certificate_key /var/cpanel/ssl/apache_tls/lmpvideo.sikderithub.com/combined;

    server_name  whm.lmpvideo.sikderithub.com;

    include conf.d/includes-optional/cloudflare.conf;

    location /.well-known/cpanel-dcv {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/pki-validation {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location /.well-known/acme-challenge {
        root /home/sikderithub/public_html/lmpvideo;
    }

    location / {
        # Force https for service subdomains
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        # since proxy_set_header can not be done inside an if block we jump though hoops
        # default value is empty because the header will be only sent if $value is not empty
        set $upgrade_value "";
        set $connection_value "";

        if ($http_upgrade ~* ^websocket$) {
            set $upgrade_value $http_upgrade;
            set $connection_value "upgrade";
        }

        # In nginx you still need to use `http` for protocol in your url and not `ws`.
        # The `ws` and `wss` protocol are required for browser, in the nginx side we add
        #   the headers below to handle the websockets over `http`.
        proxy_set_header Upgrade $upgrade_value; # the header will be only sent if $upgrade_value is not empty
        proxy_set_header Connection $connection_value; # the header will be only sent if $connection_value is not empty
        include conf.d/includes-optional/cpanel-proxy.conf;
        proxy_pass_header Upgrade; # this is hidden in cpanel-proxy.conf, but is needed for websockets
        proxy_pass http://127.0.0.1:2086;
    }
}
